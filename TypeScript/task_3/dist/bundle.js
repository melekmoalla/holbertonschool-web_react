!function(o){var e={};function t(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return o[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=o,t.c=e,t.d=function(o,e,n){t.o(o,e)||Object.defineProperty(o,e,{enumerable:!0,get:n})},t.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},t.t=function(o,e){if(1&e&&(o=t(o)),8&e)return o;if(4&e&&"object"==typeof o&&o&&o.__esModule)return o;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:o}),2&e&&"string"!=typeof o)for(var r in o)t.d(n,r,function(e){return o[e]}.bind(null,r));return n},t.n=function(o){var e=o&&o.__esModule?function(){return o.default}:function(){return o};return t.d(e,"a",e),e},t.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},t.p="",t(t.s=0)}([function(o,e,t){"use strict";t.r(e);var n=function(){return(n=Object.assign||function(o){for(var e,t=1,n=arguments.length;t<n;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(o[r]=e[r]);return o}).apply(this,arguments)};console.log("John"[0]+". "+"Doe");var r=new(function(){function o(o,e){this.firstName=o,this.lastName=e}return o.prototype.workOnHomework=function(){return"Currently working"},o.prototype.displayName=function(){return this.firstName},o}())("John","Doe");console.log(r.workOnHomework()),console.log(r.displayName());var i=function(){this.workFromHome=function(){return"Working from home"},this.getCoffeeBreak=function(){return"Getting a coffee break"},this.workDirectorTasks=function(){return"Getting to director tasks"}},a=function(){this.workFromHome=function(){return"Cannot work from home"},this.getCoffeeBreak=function(){return"Cannot have a break"},this.workTeacherTasks=function(){return"Getting to work"}},u=function(o){return("string"==typeof o?parseFloat(o):o)<500?new a:new i};console.log(u(200)),console.log(u(1e3)),console.log(u("$500"));var c=function(o){!function(o){return o instanceof i}(o)?console.log(o.workTeacherTasks()):console.log(o.workDirectorTasks())};c(u(200)),c(u(1e3));var l=function(o){return"Math"===o?"Teaching Math":"Teaching History"};console.log(l("Math")),console.log(l("History"));var s,f={firstName:"Guillaume",lastName:"Salva"},g=function(o){return console.log("Insert row",o),Math.floor(Math.random()*Math.floor(1e3))}(f);console.log("Inserted Row ID: "+g),function(o,e){console.log("Update row "+o,e)}(g,n(n({},f),{age:23})),s=g,console.log("Delete row id",s)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,