!function(e){var o={};function n(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=o,n.d=function(e,o,t){n.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,o){if(1&o&&(e=n(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var r in e)n.d(t,r,function(o){return e[o]}.bind(null,r));return t},n.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(o,"a",o),o},n.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},n.p="",n(n.s=0)}([function(e,o){console.log("John"[0]+". "+"Doe");var n=new(function(){function e(e,o){this.firstName=e,this.lastName=o}return e.prototype.workOnHomework=function(){return"Currently working"},e.prototype.displayName=function(){return this.firstName},e}())("John","Doe");console.log(n.workOnHomework()),console.log(n.displayName());var t=function(){this.workFromHome=function(){return"Working from home"},this.getCoffeeBreak=function(){return"Getting a coffee break"},this.workDirectorTasks=function(){return"Getting to director tasks"}},r=function(){this.workFromHome=function(){return"Cannot work from home"},this.getCoffeeBreak=function(){return"Cannot have a break"},this.workTeacherTasks=function(){return"Getting to work"}},i=function(e){return("string"==typeof e?parseFloat(e):e)<500?new r:new t};console.log(i(200)),console.log(i(1e3)),console.log(i("$500"));var u=function(e){!function(e){return e instanceof t}(e)?console.log(e.workTeacherTasks()):console.log(e.workDirectorTasks())};u(i(200)),u(i(1e3));var c=function(e){return"Math"===e?"Teaching Math":"Teaching History"};console.log(c("Math")),console.log(c("History"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,